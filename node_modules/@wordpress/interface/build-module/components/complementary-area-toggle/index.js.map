{"version":3,"sources":["@wordpress/interface/src/components/complementary-area-toggle/index.js"],"names":["omit","Button","useDispatch","useSelect","complementaryAreaContext","ComplementaryAreaToggle","as","scope","identifier","icon","selectedIcon","props","ComponentToUse","isSelected","select","getActiveComplementaryArea","enableComplementaryArea","disableComplementaryArea"],"mappings":";;;;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AAEA;;;;AAGA,OAAOC,wBAAP,MAAqC,+BAArC;;AAEA,SAASC,uBAAT,OAOI;AAAA,qBANHC,EAMG;AAAA,MANHA,EAMG,wBANEL,MAMF;AAAA,MALHM,KAKG,QALHA,KAKG;AAAA,MAJHC,UAIG,QAJHA,UAIG;AAAA,MAHHC,IAGG,QAHHA,IAGG;AAAA,MAFHC,YAEG,QAFHA,YAEG;AAAA,MADAC,KACA;;AACH,MAAMC,cAAc,GAAGN,EAAvB;AACA,MAAMO,UAAU,GAAGV,SAAS,CAC3B,UAAEW,MAAF;AAAA,WACCA,MAAM,CAAE,gBAAF,CAAN,CAA2BC,0BAA3B,CAAuDR,KAAvD,MACAC,UAFD;AAAA,GAD2B,EAI3B,CAAEA,UAAF,CAJ2B,CAA5B;;AAFG,qBAQ2DN,WAAW,CACxE,gBADwE,CARtE;AAAA,MAQKc,uBARL,gBAQKA,uBARL;AAAA,MAQ8BC,wBAR9B,gBAQ8BA,wBAR9B;;AAWH,SACC,cAAC,cAAD;AACC,IAAA,IAAI,EAAGP,YAAY,IAAIG,UAAhB,GAA6BH,YAA7B,GAA4CD,IADpD;AAEC,IAAA,OAAO,EAAG,mBAAM;AACf,UAAKI,UAAL,EAAkB;AACjBI,QAAAA,wBAAwB,CAAEV,KAAF,CAAxB;AACA,OAFD,MAEO;AACNS,QAAAA,uBAAuB,CAAET,KAAF,EAASC,UAAT,CAAvB;AACA;AACD;AARF,KASMR,IAAI,CAAEW,KAAF,EAAS,CAAE,MAAF,CAAT,CATV,EADD;AAaA;;AAED,eAAeP,wBAAwB,CAAEC,uBAAF,CAAvC","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport complementaryAreaContext from '../complementary-area-context';\n\nfunction ComplementaryAreaToggle( {\n\tas = Button,\n\tscope,\n\tidentifier,\n\ticon,\n\tselectedIcon,\n\t...props\n} ) {\n\tconst ComponentToUse = as;\n\tconst isSelected = useSelect(\n\t\t( select ) =>\n\t\t\tselect( 'core/interface' ).getActiveComplementaryArea( scope ) ===\n\t\t\tidentifier,\n\t\t[ identifier ]\n\t);\n\tconst { enableComplementaryArea, disableComplementaryArea } = useDispatch(\n\t\t'core/interface'\n\t);\n\treturn (\n\t\t<ComponentToUse\n\t\t\ticon={ selectedIcon && isSelected ? selectedIcon : icon }\n\t\t\tonClick={ () => {\n\t\t\t\tif ( isSelected ) {\n\t\t\t\t\tdisableComplementaryArea( scope );\n\t\t\t\t} else {\n\t\t\t\t\tenableComplementaryArea( scope, identifier );\n\t\t\t\t}\n\t\t\t} }\n\t\t\t{ ...omit( props, [ 'name' ] ) }\n\t\t/>\n\t);\n}\n\nexport default complementaryAreaContext( ComplementaryAreaToggle );\n"]}
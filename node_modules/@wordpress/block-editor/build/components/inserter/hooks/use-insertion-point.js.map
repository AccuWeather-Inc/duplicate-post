{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-insertion-point.js"],"names":["useInsertionPoint","onSelect","rootClientId","clientId","isAppender","selectBlockOnInsert","insertionIndex","select","getSettings","getBlockRootClientId","_getBlockSelectionEnd","getBlockSelectionEnd","destRootClientId","end","hasPatterns","__experimentalBlockPatterns","length","destinationRootClientId","getSelectedBlock","getBlockIndex","getBlockOrder","replaceBlocks","insertBlocks","showInsertionPoint","hideInsertionPoint","getInsertionIndex","undefined","onInsertBlocks","blocks","meta","selectedBlock","message","onToggleInsertionPoint","show","index"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { isUnmodifiedDefaultBlock } from '@wordpress/blocks';\nimport { _n } from '@wordpress/i18n';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * @typedef WPInserterConfig\n *\n * @property {string=} rootClientId        Inserter Root Client ID.\n * @property {string=} clientId            Inserter Client ID.\n * @property {boolean} isAppender          Whether the inserter is an appender or not.\n * @property {boolean} selectBlockOnInsert Whether the block should be selected on insert.\n */\n\n/**\n * Returns the insertion point state given the inserter config.\n *\n * @param {WPInserterConfig} config Inserter Config.\n * @return {Array} Insertion Point State (rootClientID, onInsertBlocks and onToggle).\n */\nfunction useInsertionPoint( {\n\tonSelect,\n\trootClientId,\n\tclientId,\n\tisAppender,\n\tselectBlockOnInsert,\n\tinsertionIndex,\n} ) {\n\tconst {\n\t\tdestinationRootClientId,\n\t\tgetSelectedBlock,\n\t\tgetBlockIndex,\n\t\tgetBlockSelectionEnd,\n\t\tgetBlockOrder,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetSettings,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockSelectionEnd: _getBlockSelectionEnd,\n\t\t\t} = select( 'core/block-editor' );\n\n\t\t\tlet destRootClientId = rootClientId;\n\t\t\tif ( ! destRootClientId && ! clientId && ! isAppender ) {\n\t\t\t\tconst end = _getBlockSelectionEnd();\n\t\t\t\tif ( end ) {\n\t\t\t\t\tdestRootClientId = getBlockRootClientId( end );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\thasPatterns: !! getSettings().__experimentalBlockPatterns\n\t\t\t\t\t?.length,\n\t\t\t\tdestinationRootClientId: destRootClientId,\n\t\t\t\t...pick( select( 'core/block-editor' ), [\n\t\t\t\t\t'getSelectedBlock',\n\t\t\t\t\t'getBlockIndex',\n\t\t\t\t\t'getBlockSelectionEnd',\n\t\t\t\t\t'getBlockOrder',\n\t\t\t\t] ),\n\t\t\t};\n\t\t},\n\t\t[ isAppender, clientId, rootClientId ]\n\t);\n\tconst {\n\t\treplaceBlocks,\n\t\tinsertBlocks,\n\t\tshowInsertionPoint,\n\t\thideInsertionPoint,\n\t} = useDispatch( 'core/block-editor' );\n\n\tfunction getInsertionIndex() {\n\t\tif ( insertionIndex !== undefined ) {\n\t\t\treturn insertionIndex;\n\t\t}\n\n\t\t// If the clientId is defined, we insert at the position of the block.\n\t\tif ( clientId ) {\n\t\t\treturn getBlockIndex( clientId, destinationRootClientId );\n\t\t}\n\n\t\t// If there's a selected block, and the selected block is not the destination root block, we insert after the selected block.\n\t\tconst end = getBlockSelectionEnd();\n\t\tif ( ! isAppender && end ) {\n\t\t\treturn getBlockIndex( end, destinationRootClientId ) + 1;\n\t\t}\n\n\t\t// Otherwise, we insert at the end of the current rootClientId\n\t\treturn getBlockOrder( destinationRootClientId ).length;\n\t}\n\n\tconst onInsertBlocks = ( blocks, meta ) => {\n\t\tconst selectedBlock = getSelectedBlock();\n\t\tif (\n\t\t\t! isAppender &&\n\t\t\tselectedBlock &&\n\t\t\tisUnmodifiedDefaultBlock( selectedBlock )\n\t\t) {\n\t\t\treplaceBlocks( selectedBlock.clientId, blocks, null, null, meta );\n\t\t} else {\n\t\t\tinsertBlocks(\n\t\t\t\tblocks,\n\t\t\t\tgetInsertionIndex(),\n\t\t\t\tdestinationRootClientId,\n\t\t\t\tselectBlockOnInsert,\n\t\t\t\tmeta\n\t\t\t);\n\t\t}\n\n\t\tif ( ! selectBlockOnInsert ) {\n\t\t\t// translators: %d: the name of the block that has been added\n\t\t\tconst message = _n(\n\t\t\t\t'%d block added.',\n\t\t\t\t'%d blocks added.',\n\t\t\t\tblocks.length\n\t\t\t);\n\t\t\tspeak( message );\n\t\t}\n\n\t\tif ( onSelect ) {\n\t\t\tonSelect();\n\t\t}\n\t};\n\n\tconst onToggleInsertionPoint = ( show ) => {\n\t\tif ( show ) {\n\t\t\tconst index = getInsertionIndex();\n\t\t\tshowInsertionPoint( destinationRootClientId, index );\n\t\t} else {\n\t\t\thideInsertionPoint();\n\t\t}\n\t};\n\n\treturn [ destinationRootClientId, onInsertBlocks, onToggleInsertionPoint ];\n}\n\nexport default useInsertionPoint;\n"]}
{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/index.js"],"names":["classnames","useViewportMatch","forwardRef","useRef","useSelect","getBlockType","withBlockContentContext","ButtonBlockAppender","DefaultBlockAppender","useNestedSettingsUpdate","useInnerBlockTemplateSync","getBlockContext","BlockListItems","BlockContextProvider","useBlockEditContext","useBlockSync","UncontrolledInnerBlocks","props","clientId","allowedBlocks","template","templateLock","wrapperRef","templateInsertUpdatesSelection","captureToolbars","__experimentalCaptureToolbars","__experimentalAppenderTagName","renderAppender","orientation","placeholder","context","select","block","getBlock","blockType","name","providesContext","attributes","ControlledInnerBlocks","ForwardedInnerBlocks","ref","innerBlocksProps","useInnerBlocksProps","options","fallbackRef","isSmallScreen","hasOverlay","getBlockName","isBlockSelected","hasSelectedInnerBlock","isNavigationMode","enableClickThrough","InnerBlocks","value","onChange","className","children","Content","BlockContent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { forwardRef, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { getBlockType, withBlockContentContext } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport ButtonBlockAppender from './button-block-appender';\nimport DefaultBlockAppender from './default-block-appender';\nimport useNestedSettingsUpdate from './use-nested-settings-update';\nimport useInnerBlockTemplateSync from './use-inner-block-template-sync';\nimport getBlockContext from './get-block-context';\n\n/**\n * Internal dependencies\n */\nimport { BlockListItems } from '../block-list';\nimport { BlockContextProvider } from '../block-context';\nimport { useBlockEditContext } from '../block-edit/context';\nimport useBlockSync from '../provider/use-block-sync';\n\n/**\n * InnerBlocks is a component which allows a single block to have multiple blocks\n * as children. The UncontrolledInnerBlocks component is used whenever the inner\n * blocks are not controlled by another entity. In other words, it is normally\n * used for inner blocks in the post editor\n *\n * @param {Object} props The component props.\n */\nfunction UncontrolledInnerBlocks( props ) {\n\tconst {\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\twrapperRef,\n\t\ttemplateInsertUpdatesSelection,\n\t\t__experimentalCaptureToolbars: captureToolbars,\n\t\t__experimentalAppenderTagName,\n\t\trenderAppender,\n\t\torientation,\n\t\tplaceholder,\n\t} = props;\n\n\tuseNestedSettingsUpdate(\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplateLock,\n\t\tcaptureToolbars,\n\t\torientation\n\t);\n\n\tuseInnerBlockTemplateSync(\n\t\tclientId,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\ttemplateInsertUpdatesSelection\n\t);\n\n\tconst context = useSelect(\n\t\t( select ) => {\n\t\t\tconst block = select( 'core/block-editor' ).getBlock( clientId );\n\t\t\tconst blockType = getBlockType( block.name );\n\n\t\t\tif ( ! blockType || ! blockType.providesContext ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn getBlockContext( block.attributes, blockType );\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t// This component needs to always be synchronous as it's the one changing\n\t// the async mode depending on the block selection.\n\treturn (\n\t\t<BlockContextProvider value={ context }>\n\t\t\t<BlockListItems\n\t\t\t\trootClientId={ clientId }\n\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t__experimentalAppenderTagName={ __experimentalAppenderTagName }\n\t\t\t\twrapperRef={ wrapperRef }\n\t\t\t\tplaceholder={ placeholder }\n\t\t\t/>\n\t\t</BlockContextProvider>\n\t);\n}\n\n/**\n * The controlled inner blocks component wraps the uncontrolled inner blocks\n * component with the blockSync hook. This keeps the innerBlocks of the block in\n * the block-editor store in sync with the blocks of the controlling entity. An\n * example of an inner block controller is a template part block, which provides\n * its own blocks from the template part entity data source.\n *\n * @param {Object} props The component props.\n */\nfunction ControlledInnerBlocks( props ) {\n\tuseBlockSync( props );\n\treturn <UncontrolledInnerBlocks { ...props } />;\n}\n\nconst ForwardedInnerBlocks = forwardRef( ( props, ref ) => {\n\tconst innerBlocksProps = useInnerBlocksProps( { ref }, props );\n\treturn (\n\t\t<div className=\"block-editor-inner-blocks\">\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</div>\n\t);\n} );\n\n/**\n * This hook is used to lightly mark an element as an inner blocks wrapper\n * element. Call this hook and pass the returned props to the element to mark as\n * an inner blocks wrapper, automatically rendering inner blocks as children. If\n * you define a ref for the element, it is important to pass the ref to this\n * hook, which the hook in turn will pass to the component through the props it\n * returns. Optionally, you can also pass any other props through this hook, and\n * they will be merged and returned.\n *\n * @param {Object} props   Optional. Props to pass to the element. Must contain\n *                         the ref if one is defined.\n * @param {Object} options Optional. Inner blocks options.\n *\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport function useInnerBlocksProps( props = {}, options = {} ) {\n\tconst fallbackRef = useRef();\n\tconst { clientId } = useBlockEditContext();\n\tconst isSmallScreen = useViewportMatch( 'medium', '<' );\n\tconst hasOverlay = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockName,\n\t\t\t\tisBlockSelected,\n\t\t\t\thasSelectedInnerBlock,\n\t\t\t\tisNavigationMode,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst enableClickThrough = isNavigationMode() || isSmallScreen;\n\t\t\treturn (\n\t\t\t\tgetBlockName( clientId ) !== 'core/template' &&\n\t\t\t\t! isBlockSelected( clientId ) &&\n\t\t\t\t! hasSelectedInnerBlock( clientId, true ) &&\n\t\t\t\tenableClickThrough\n\t\t\t);\n\t\t},\n\t\t[ clientId, isSmallScreen ]\n\t);\n\n\tconst ref = props.ref || fallbackRef;\n\tconst InnerBlocks =\n\t\toptions.value && options.onChange\n\t\t\t? ControlledInnerBlocks\n\t\t\t: UncontrolledInnerBlocks;\n\n\treturn {\n\t\t...props,\n\t\tref,\n\t\tclassName: classnames(\n\t\t\tprops.className,\n\t\t\t'block-editor-block-list__layout',\n\t\t\t{\n\t\t\t\t'has-overlay': hasOverlay,\n\t\t\t}\n\t\t),\n\t\tchildren: (\n\t\t\t<InnerBlocks\n\t\t\t\t{ ...options }\n\t\t\t\tclientId={ clientId }\n\t\t\t\twrapperRef={ ref }\n\t\t\t/>\n\t\t),\n\t};\n}\n\n// Expose default appender placeholders as components.\nForwardedInnerBlocks.DefaultBlockAppender = DefaultBlockAppender;\nForwardedInnerBlocks.ButtonBlockAppender = ButtonBlockAppender;\n\nForwardedInnerBlocks.Content = withBlockContentContext(\n\t( { BlockContent } ) => <BlockContent />\n);\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport default ForwardedInnerBlocks;\n"]}
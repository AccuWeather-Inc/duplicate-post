{"version":3,"sources":["@wordpress/core-data/src/actions.js"],"names":["deleteEntityRecord","editEntityRecord","undo","redo","saveEntityRecord","saveEditedEntityRecord","castArray","get","isEqual","find","apiFetch","syncSelect","addQueryArgs","receiveItems","removeItems","receiveQueriedItems","getKindEntities","DEFAULT_ENTITY_KEY","receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","map","record","status","title","action","receiveCurrentTheme","currentTheme","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","entity","deletedRecord","path","baseURL","method","error","edits","options","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","__unstableCreateUndoLevel","isAutosave","entityIdKey","entries","evaluatedValue","persistedRecord","currentUserId","id","autosavePost","data","includes","updatedRecord","newRecord","receiveAutosaves","persistedEntity","currentEdits","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { apiFetch, syncSelect } from '@wordpress/data-controls';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches\n *\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query );\n\t} else {\n\t\taction = receiveItems( records );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url     URL to preview the embed for.\n * @param {*}       preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}  kind              Kind of the deleted entity.\n * @param {string}  name              Name of the deleted entity.\n * @param {string}  recordId          Record ID of the deleted entity.\n * @param {?Object} query             Special query parameters for the DELETE API call.\n */\nexport function* deleteEntityRecord( kind, name, recordId, query ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tlet error;\n\tlet deletedRecord = false;\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tyield {\n\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t};\n\n\ttry {\n\t\tlet path = `${ entity.baseURL }/${ recordId }`;\n\n\t\tif ( query ) {\n\t\t\tpath = addQueryArgs( path, query );\n\t\t}\n\n\t\tdeletedRecord = yield apiFetch( {\n\t\t\tpath,\n\t\t\tmethod: 'DELETE',\n\t\t} );\n\n\t\tyield removeItems( kind, name, recordId, true );\n\t} catch ( _error ) {\n\t\terror = _error;\n\t}\n\n\tyield {\n\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t};\n\n\treturn deletedRecord;\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield syncSelect( 'core', 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield syncSelect(\n\t\t'core',\n\t\t'getRawEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editedRecord = yield syncSelect(\n\t\t'core',\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield syncSelect( 'core', 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield syncSelect( 'core', 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}  kind                       Kind of the received entity.\n * @param {string}  name                       Name of the received entity.\n * @param {Object}  record                     Record to be saved.\n * @param {Object}  options                    Saving options.\n * @param {boolean} [options.isAutosave=false] Whether this is an autosave.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false } = { isAutosave: false }\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\t// Evaluate optimized edits.\n\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\tif ( typeof value === 'function' ) {\n\t\t\tconst evaluatedValue = value(\n\t\t\t\tyield syncSelect(\n\t\t\t\t\t'core',\n\t\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t)\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t\trecord[ key ] = evaluatedValue;\n\t\t}\n\t}\n\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tisAutosave,\n\t};\n\tlet updatedRecord;\n\tlet error;\n\tlet persistedEntity;\n\tlet currentEdits;\n\ttry {\n\t\tconst path = `${ entity.baseURL }${ recordId ? '/' + recordId : '' }`;\n\t\tconst persistedRecord = yield syncSelect(\n\t\t\t'core',\n\t\t\t'getRawEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tif ( isAutosave ) {\n\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t// so the client just sends and receives objects.\n\t\t\tconst currentUser = yield syncSelect( 'core', 'getCurrentUser' );\n\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\tconst autosavePost = yield syncSelect(\n\t\t\t\t'core',\n\t\t\t\t'getAutosave',\n\t\t\t\tpersistedRecord.type,\n\t\t\t\tpersistedRecord.id,\n\t\t\t\tcurrentUserId\n\t\t\t);\n\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t// So we fallback to the previous autosave and then\n\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t// have a value.\n\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{ status: data.status === 'auto-draft' ? 'draft' : data.status }\n\t\t\t);\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t// when its update is requested by the author and the post had\n\t\t\t// draft or auto-draft status.\n\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\tlet newRecord = {\n\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t...data,\n\t\t\t\t\t...updatedRecord,\n\t\t\t\t};\n\t\t\t\tnewRecord = Object.keys( newRecord ).reduce( ( acc, key ) => {\n\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} );\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tnewRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t}\n\t\t} else {\n\t\t\t// Auto drafts should be converted to drafts on explicit saves and we should not respect their default title,\n\t\t\t// but some plugins break with this behavior so we can't filter it on the server.\n\t\t\tlet data = record;\n\t\t\tif (\n\t\t\t\tkind === 'postType' &&\n\t\t\t\tpersistedRecord &&\n\t\t\t\tpersistedRecord.status === 'auto-draft'\n\t\t\t) {\n\t\t\t\tif ( ! data.status ) {\n\t\t\t\t\tdata = { ...data, status: 'draft' };\n\t\t\t\t}\n\t\t\t\tif ( ! data.title || data.title === 'Auto Draft' ) {\n\t\t\t\t\tdata = { ...data, title: '' };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get the full local version of the record before the update,\n\t\t\t// to merge it with the edits and then propagate it to subscribers\n\t\t\tpersistedEntity = yield syncSelect(\n\t\t\t\t'core',\n\t\t\t\t'__experimentalGetEntityRecordNoResolver',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tcurrentEdits = yield syncSelect(\n\t\t\t\t'core',\n\t\t\t\t'getEntityRecordEdits',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t{ ...persistedEntity, ...data },\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tupdatedRecord,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t} catch ( _error ) {\n\t\terror = _error;\n\n\t\t// If we got to the point in the try block where we made an optimistic update,\n\t\t// we need to roll it back here.\n\t\tif ( persistedEntity && currentEdits ) {\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tpersistedEntity,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t...currentEdits,\n\t\t\t\t\t...( yield syncSelect(\n\t\t\t\t\t\t'core',\n\t\t\t\t\t\t'getEntityRecordEdits',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t) ),\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t\tisAutosave,\n\t};\n\n\treturn updatedRecord;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield syncSelect(\n\t\t\t'core',\n\t\t\t'hasEditsForEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield syncSelect(\n\t\t'core',\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\tyield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n"]}
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createElement, Fragment } from "@wordpress/element";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { DropdownMenu, MenuGroup, MenuItem } from '@wordpress/components';
import { moreVertical } from '@wordpress/icons';
import { ActionItem, PinnedItems } from '@wordpress/interface';
import { useViewportMatch } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import ModeSwitcher from '../mode-switcher';
import PreferencesMenuItem from '../preferences-menu-item';
import ToolsMoreMenuGroup from '../tools-more-menu-group';
import WritingMenu from '../writing-menu';
var POPOVER_PROPS = {
  className: 'edit-post-more-menu__content',
  position: 'bottom left'
};
var TOGGLE_PROPS = {
  tooltipPosition: 'bottom'
};

var MoreMenu = function MoreMenu(_ref) {
  var showIconLabels = _ref.showIconLabels;
  var isLargeViewport = useViewportMatch('large');
  return createElement(DropdownMenu, {
    className: "edit-post-more-menu",
    icon: moreVertical
    /* translators: button label text should, if possible, be under 16 characters. */
    ,
    label: __('Options'),
    popoverProps: POPOVER_PROPS,
    toggleProps: _objectSpread({
      showTooltip: !showIconLabels,
      isTertiary: showIconLabels
    }, TOGGLE_PROPS)
  }, function (_ref2) {
    var onClose = _ref2.onClose;
    return createElement(Fragment, null, showIconLabels && !isLargeViewport && createElement(PinnedItems.Slot, {
      className: showIconLabels && 'show-icon-labels',
      scope: "core/edit-post"
    }), createElement(WritingMenu, null), createElement(ModeSwitcher, null), createElement(ActionItem.Slot, {
      name: "core/edit-post/plugin-more-menu",
      label: __('Plugins'),
      as: [MenuGroup, MenuItem],
      fillProps: {
        onClick: onClose
      }
    }), createElement(ToolsMoreMenuGroup.Slot, {
      fillProps: {
        onClose: onClose
      }
    }), createElement(MenuGroup, null, createElement(PreferencesMenuItem, null)));
  });
};

export default MoreMenu;
//# sourceMappingURL=index.js.map
{"version":3,"sources":["@wordpress/edit-post/src/components/visual-editor/block-inspector-button.js"],"names":["noop","__","MenuItem","useSelect","useDispatch","speak","BlockInspectorButton","onClick","small","select","shortcut","getShortcutRepresentation","areAdvancedSettingsOpened","getActiveGeneralSidebarName","openGeneralSidebar","closeGeneralSidebar","speakMessage","label"],"mappings":";;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAO,SAASC,oBAAT,OAAmE;AAAA,0BAAlCC,OAAkC;AAAA,MAAlCA,QAAkC,6BAAxBP,IAAwB;AAAA,wBAAlBQ,KAAkB;AAAA,MAAlBA,KAAkB,2BAAV,KAAU;;AAAA,mBACzBL,SAAS,CACxD,UAAEM,MAAF;AAAA,WAAgB;AACfC,MAAAA,QAAQ,EAAED,MAAM,CACf,yBADe,CAAN,CAERE,yBAFQ,CAEmB,+BAFnB,CADK;AAIfC,MAAAA,yBAAyB,EACxBH,MAAM,CAAE,gBAAF,CAAN,CAA2BI,2BAA3B,OACA;AANc,KAAhB;AAAA,GADwD,EASxD,EATwD,CADgB;AAAA,MACjEH,QADiE,cACjEA,QADiE;AAAA,MACvDE,yBADuD,cACvDA,yBADuD;;AAAA,qBAYrBR,WAAW,CAC9D,gBAD8D,CAZU;AAAA,MAYjEU,kBAZiE,gBAYjEA,kBAZiE;AAAA,MAY7CC,mBAZ6C,gBAY7CA,mBAZ6C;;AAgBzE,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B,QAAKJ,yBAAL,EAAiC;AAChCP,MAAAA,KAAK,CAAEJ,EAAE,CAAE,uBAAF,CAAJ,CAAL;AACA,KAFD,MAEO;AACNI,MAAAA,KAAK,CACJJ,EAAE,CACD,4EADC,CADE,CAAL;AAKA;AACD,GAVD;;AAYA,MAAMgB,KAAK,GAAGL,yBAAyB,GACpCX,EAAE,CAAE,oBAAF,CADkC,GAEpCA,EAAE,CAAE,oBAAF,CAFL;AAIA,SACC,cAAC,QAAD;AACC,IAAA,OAAO,EAAG,mBAAM;AACf,UAAKW,yBAAL,EAAiC;AAChCG,QAAAA,mBAAmB;AACnB,OAFD,MAEO;AACND,QAAAA,kBAAkB,CAAE,iBAAF,CAAlB;AACAE,QAAAA,YAAY;;AACZT,QAAAA,QAAO;AACP;AACD,KATF;AAUC,IAAA,QAAQ,EAAGG;AAVZ,KAYG,CAAEF,KAAF,IAAWS,KAZd,CADD;AAgBA;AAED,eAAeX,oBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { speak } from '@wordpress/a11y';\n\nexport function BlockInspectorButton( { onClick = noop, small = false } ) {\n\tconst { shortcut, areAdvancedSettingsOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\tshortcut: select(\n\t\t\t\t'core/keyboard-shortcuts'\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' ),\n\t\t\tareAdvancedSettingsOpened:\n\t\t\t\tselect( 'core/edit-post' ).getActiveGeneralSidebarName() ===\n\t\t\t\t'edit-post/block',\n\t\t} ),\n\t\t[]\n\t);\n\tconst { openGeneralSidebar, closeGeneralSidebar } = useDispatch(\n\t\t'core/edit-post'\n\t);\n\n\tconst speakMessage = () => {\n\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\tspeak( __( 'Block settings closed' ) );\n\t\t} else {\n\t\t\tspeak(\n\t\t\t\t__(\n\t\t\t\t\t'Additional settings are now available in the Editor block settings sidebar'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t};\n\n\tconst label = areAdvancedSettingsOpened\n\t\t? __( 'Hide More Settings' )\n\t\t: __( 'Show More Settings' );\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\t\t\tcloseGeneralSidebar();\n\t\t\t\t} else {\n\t\t\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t\t\t\tspeakMessage();\n\t\t\t\t\tonClick();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tshortcut={ shortcut }\n\t\t>\n\t\t\t{ ! small && label }\n\t\t</MenuItem>\n\t);\n}\n\nexport default BlockInspectorButton;\n"]}
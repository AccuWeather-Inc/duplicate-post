{"version":3,"sources":["@wordpress/edit-post/src/editor.js"],"names":["memize","size","map","without","omit","withSelect","withDispatch","EditorProvider","ErrorBoundary","PostLockedModal","StrictMode","Component","KeyboardShortcuts","SlotFillProvider","DropZoneProvider","compose","preventEventDiscovery","Layout","EditorInitialization","EditPostSettings","Editor","arguments","getEditorSettings","maxSize","settings","hasFixedToolbar","focusMode","hasReducedUI","hasThemeStyles","hiddenBlockTypes","blockTypes","preferredStyleVariations","__experimentalLocalAutosaveInterval","__experimentalSetIsInserterOpened","updatePreferredStyleVariations","keepCaretInsideBlock","__experimentalPreferredStyleVariations","value","onChange","styles","defaultEditorStyles","defaultAllowedBlockTypes","allowedBlockTypes","props","post","postId","initialEdits","onError","setIsInserterOpened","editorSettings","select","postType","isFeatureActive","getPreference","__experimentalGetPreviewDeviceType","getEntityRecord","getBlockTypes","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport { size, map, without, omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport {\n\tEditorProvider,\n\tErrorBoundary,\n\tPostLockedModal,\n} from '@wordpress/editor';\nimport { StrictMode, Component } from '@wordpress/element';\nimport {\n\tKeyboardShortcuts,\n\tSlotFillProvider,\n\tDropZoneProvider,\n} from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport preventEventDiscovery from './prevent-event-discovery';\nimport Layout from './components/layout';\nimport EditorInitialization from './components/editor-initialization';\nimport EditPostSettings from './components/edit-post-settings';\n\nclass Editor extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.getEditorSettings = memize( this.getEditorSettings, {\n\t\t\tmaxSize: 1,\n\t\t} );\n\t}\n\n\tgetEditorSettings(\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thasReducedUI,\n\t\thasThemeStyles,\n\t\thiddenBlockTypes,\n\t\tblockTypes,\n\t\tpreferredStyleVariations,\n\t\t__experimentalLocalAutosaveInterval,\n\t\t__experimentalSetIsInserterOpened,\n\t\tupdatePreferredStyleVariations,\n\t\tkeepCaretInsideBlock\n\t) {\n\t\tsettings = {\n\t\t\t...( hasThemeStyles\n\t\t\t\t? settings\n\t\t\t\t: omit( settings, [ 'defaultEditorStyles' ] ) ),\n\t\t\t__experimentalPreferredStyleVariations: {\n\t\t\t\tvalue: preferredStyleVariations,\n\t\t\t\tonChange: updatePreferredStyleVariations,\n\t\t\t},\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thasReducedUI,\n\t\t\t__experimentalLocalAutosaveInterval,\n\n\t\t\t// This is marked as experimental to give time for the quick inserter to mature.\n\t\t\t__experimentalSetIsInserterOpened,\n\t\t\tkeepCaretInsideBlock,\n\t\t\tstyles: hasThemeStyles\n\t\t\t\t? settings.styles\n\t\t\t\t: settings.defaultEditorStyles,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( size( hiddenBlockTypes ) > 0 ) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? map( blockTypes, 'name' )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\tsettings.allowedBlockTypes = without(\n\t\t\t\tdefaultAllowedBlockTypes,\n\t\t\t\t...hiddenBlockTypes\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thasReducedUI,\n\t\t\thasThemeStyles,\n\t\t\tpost,\n\t\t\tpostId,\n\t\t\tinitialEdits,\n\t\t\tonError,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpreferredStyleVariations,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t\tsetIsInserterOpened,\n\t\t\tupdatePreferredStyleVariations,\n\t\t\tkeepCaretInsideBlock,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tif ( ! post ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorSettings = this.getEditorSettings(\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thasReducedUI,\n\t\t\thasThemeStyles,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpreferredStyleVariations,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t\tsetIsInserterOpened,\n\t\t\tupdatePreferredStyleVariations,\n\t\t\tkeepCaretInsideBlock\n\t\t);\n\n\t\treturn (\n\t\t\t<StrictMode>\n\t\t\t\t<EditPostSettings.Provider value={ settings }>\n\t\t\t\t\t<SlotFillProvider>\n\t\t\t\t\t\t<DropZoneProvider>\n\t\t\t\t\t\t\t<EditorProvider\n\t\t\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\t\t\tpost={ post }\n\t\t\t\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ErrorBoundary onError={ onError }>\n\t\t\t\t\t\t\t\t\t<EditorInitialization postId={ postId } />\n\t\t\t\t\t\t\t\t\t<Layout />\n\t\t\t\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\t\t\t\tshortcuts={ preventEventDiscovery }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t\t\t<PostLockedModal />\n\t\t\t\t\t\t\t</EditorProvider>\n\t\t\t\t\t\t</DropZoneProvider>\n\t\t\t\t\t</SlotFillProvider>\n\t\t\t\t</EditPostSettings.Provider>\n\t\t\t</StrictMode>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { postId, postType } ) => {\n\t\tconst {\n\t\t\tisFeatureActive,\n\t\t\tgetPreference,\n\t\t\t__experimentalGetPreviewDeviceType,\n\t\t} = select( 'core/edit-post' );\n\t\tconst { getEntityRecord } = select( 'core' );\n\t\tconst { getBlockTypes } = select( 'core/blocks' );\n\n\t\treturn {\n\t\t\thasFixedToolbar:\n\t\t\t\tisFeatureActive( 'fixedToolbar' ) ||\n\t\t\t\t__experimentalGetPreviewDeviceType() !== 'Desktop',\n\t\t\tfocusMode: isFeatureActive( 'focusMode' ),\n\t\t\thasReducedUI: isFeatureActive( 'reducedUI' ),\n\t\t\thasThemeStyles: isFeatureActive( 'themeStyles' ),\n\t\t\tpost: getEntityRecord( 'postType', postType, postId ),\n\t\t\tpreferredStyleVariations: getPreference(\n\t\t\t\t'preferredStyleVariations'\n\t\t\t),\n\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t\tblockTypes: getBlockTypes(),\n\t\t\t__experimentalLocalAutosaveInterval: getPreference(\n\t\t\t\t'localAutosaveInterval'\n\t\t\t),\n\t\t\tkeepCaretInsideBlock: isFeatureActive( 'keepCaretInsideBlock' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst {\n\t\t\tupdatePreferredStyleVariations,\n\t\t\tsetIsInserterOpened,\n\t\t} = dispatch( 'core/edit-post' );\n\t\treturn {\n\t\t\tupdatePreferredStyleVariations,\n\t\t\tsetIsInserterOpened,\n\t\t};\n\t} ),\n] )( Editor );\n"]}
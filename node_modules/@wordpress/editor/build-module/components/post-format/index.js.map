{"version":3,"sources":["@wordpress/editor/src/components/post-format/index.js"],"names":["find","get","includes","union","__","Button","SelectControl","useDispatch","useSelect","useInstanceId","PostFormatCheck","POST_FORMATS","id","caption","PostFormat","instanceId","postFormatSelectorId","select","getEditedPostAttribute","getSuggestedPostFormat","_postFormat","themeSupports","getThemeSupports","postFormat","suggestedFormat","supportedFormats","formats","filter","format","suggestion","editPost","onUpdatePostFormat","map","label","value"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { find, get, includes, union } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, SelectControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostFormatCheck from './check';\n\nexport const POST_FORMATS = [\n\t{ id: 'aside', caption: __( 'Aside' ) },\n\t{ id: 'gallery', caption: __( 'Gallery' ) },\n\t{ id: 'link', caption: __( 'Link' ) },\n\t{ id: 'image', caption: __( 'Image' ) },\n\t{ id: 'quote', caption: __( 'Quote' ) },\n\t{ id: 'standard', caption: __( 'Standard' ) },\n\t{ id: 'status', caption: __( 'Status' ) },\n\t{ id: 'video', caption: __( 'Video' ) },\n\t{ id: 'audio', caption: __( 'Audio' ) },\n\t{ id: 'chat', caption: __( 'Chat' ) },\n];\n\nexport default function PostFormat() {\n\tconst instanceId = useInstanceId( PostFormat );\n\tconst postFormatSelectorId = `post-format-selector-${ instanceId }`;\n\n\tconst { postFormat, suggestedFormat, supportedFormats } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } = select(\n\t\t\t\t'core/editor'\n\t\t\t);\n\t\t\tconst _postFormat = getEditedPostAttribute( 'format' );\n\t\t\tconst themeSupports = select( 'core' ).getThemeSupports();\n\t\t\treturn {\n\t\t\t\tpostFormat: _postFormat ?? 'standard',\n\t\t\t\tsuggestedFormat: getSuggestedPostFormat(),\n\t\t\t\t// Ensure current format is always in the set.\n\t\t\t\t// The current format may not be a format supported by the theme.\n\t\t\t\tsupportedFormats: union(\n\t\t\t\t\t[ _postFormat ],\n\t\t\t\t\tget( themeSupports, [ 'formats' ], [] )\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst formats = POST_FORMATS.filter( ( format ) =>\n\t\tincludes( supportedFormats, format.id )\n\t);\n\tconst suggestion = find(\n\t\tformats,\n\t\t( format ) => format.id === suggestedFormat\n\t);\n\n\tconst { editPost } = useDispatch( 'core/editor' );\n\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\n\n\treturn (\n\t\t<PostFormatCheck>\n\t\t\t<div className=\"editor-post-format\">\n\t\t\t\t<div className=\"editor-post-format__content\">\n\t\t\t\t\t<label htmlFor={ postFormatSelectorId }>\n\t\t\t\t\t\t{ __( 'Post Format' ) }\n\t\t\t\t\t</label>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tvalue={ postFormat }\n\t\t\t\t\t\tonChange={ ( format ) => onUpdatePostFormat( format ) }\n\t\t\t\t\t\tid={ postFormatSelectorId }\n\t\t\t\t\t\toptions={ formats.map( ( format ) => ( {\n\t\t\t\t\t\t\tlabel: format.caption,\n\t\t\t\t\t\t\tvalue: format.id,\n\t\t\t\t\t\t} ) ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{ suggestion && suggestion.id !== postFormat && (\n\t\t\t\t\t<div className=\"editor-post-format__suggestion\">\n\t\t\t\t\t\t{ __( 'Suggestion:' ) }{ ' ' }\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tonUpdatePostFormat( suggestion.id )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ suggestion.caption }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</PostFormatCheck>\n\t);\n}\n"]}
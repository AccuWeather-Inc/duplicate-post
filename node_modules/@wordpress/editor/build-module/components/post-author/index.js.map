{"version":3,"sources":["@wordpress/editor/src/components/post-author/index.js"],"names":["debounce","useState","useMemo","useEffect","useSelect","useDispatch","__","ComboboxControl","PostAuthorCheck","PostAuthor","fieldValue","setFieldValue","select","getUser","getUsers","isResolving","getEditedPostAttribute","author","query","search","authorId","postAuthor","authors","who","isLoading","editPost","authorOptions","fetchedAuthors","map","value","id","label","name","foundAuthor","findIndex","handleSelect","postAuthorId","handleKeydown","inputValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useMemo, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport PostAuthorCheck from './check';\n\nfunction PostAuthor() {\n\tconst [ fieldValue, setFieldValue ] = useState();\n\n\tconst { authorId, isLoading, authors, postAuthor } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getUser, getUsers, isResolving } = select( 'core' );\n\t\t\tconst { getEditedPostAttribute } = select( 'core/editor' );\n\t\t\tconst author = getUser( getEditedPostAttribute( 'author' ) );\n\t\t\tconst query =\n\t\t\t\t! fieldValue || '' === fieldValue ? {} : { search: fieldValue };\n\t\t\treturn {\n\t\t\t\tauthorId: getEditedPostAttribute( 'author' ),\n\t\t\t\tpostAuthor: author,\n\t\t\t\tauthors: getUsers( { who: 'authors', ...query } ),\n\t\t\t\tisLoading: isResolving( 'core', 'getUsers', [\n\t\t\t\t\t{ search: fieldValue, who: 'authors' },\n\t\t\t\t] ),\n\t\t\t};\n\t\t},\n\t\t[ fieldValue ]\n\t);\n\tconst { editPost } = useDispatch( 'core/editor' );\n\n\tconst authorOptions = useMemo( () => {\n\t\tconst fetchedAuthors = ( authors ?? [] ).map( ( author ) => {\n\t\t\treturn {\n\t\t\t\tvalue: author.id,\n\t\t\t\tlabel: author.name,\n\t\t\t};\n\t\t} );\n\n\t\t// Ensure the current author is included in the dropdown list.\n\t\tconst foundAuthor = fetchedAuthors.findIndex(\n\t\t\t( { value } ) => postAuthor?.id === value\n\t\t);\n\n\t\tif ( foundAuthor < 0 && postAuthor ) {\n\t\t\treturn [\n\t\t\t\t{ value: postAuthor.id, label: postAuthor.name },\n\t\t\t\t...fetchedAuthors,\n\t\t\t];\n\t\t}\n\n\t\treturn fetchedAuthors;\n\t}, [ authors, postAuthor ] );\n\n\t// Initializes the post author properly\n\t// Also ensures external changes are reflected.\n\tuseEffect( () => {\n\t\tif ( postAuthor ) {\n\t\t\tsetFieldValue( postAuthor.name );\n\t\t}\n\t}, [ postAuthor ] );\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {number} postAuthorId The selected Author.\n\t */\n\tconst handleSelect = ( postAuthorId ) => {\n\t\tif ( ! postAuthorId ) {\n\t\t\treturn;\n\t\t}\n\t\teditPost( { author: postAuthorId } );\n\t};\n\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\tif ( ! postAuthor ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostAuthorCheck>\n\t\t\t<ComboboxControl\n\t\t\t\tlabel={ __( 'Author' ) }\n\t\t\t\toptions={ authorOptions }\n\t\t\t\tvalue={ authorId }\n\t\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\t\tonChange={ handleSelect }\n\t\t\t\tisLoading={ isLoading }\n\t\t\t\tallowReset={ false }\n\t\t\t/>\n\t\t</PostAuthorCheck>\n\t);\n}\n\nexport default PostAuthor;\n"]}
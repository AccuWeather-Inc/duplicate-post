{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["useSelect","useInstanceId","useEffect","BlockControls","InnerBlocks","useBlockProps","QueryToolbar","QueryProvider","QueryInspectorControls","DEFAULTS_POSTS_PER_PAGE","TEMPLATE","QueryEdit","attributes","queryId","query","postId","context","setAttributes","instanceId","blockProps","select","getSettings","postsPerPage","newQuery","exclude","length","perPage","Object","keys","updateQuery"],"mappings":";;;;;;;AAAA;;;AAGA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SACCC,aADD,EAECC,WAFD,EAGCC,aAHD,QAIO,yBAJP;AAMA;;;;AAGA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,sBAAP,MAAmC,4BAAnC;AACA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,IAAMC,QAAQ,GAAG,CAAE,CAAE,iBAAF,CAAF,CAAjB;AACA,eAAe,SAASC,SAAT,OAIX;AAAA,6BAHHC,UAGG;AAAA,MAHWC,OAGX,mBAHWA,OAGX;AAAA,MAHoBC,KAGpB,mBAHoBA,KAGpB;AAAA,MAFQC,MAER,QAFHC,OAEG,CAFQD,MAER;AAAA,MADHE,aACG,QADHA,aACG;AACH,MAAMC,UAAU,GAAGjB,aAAa,CAAEU,SAAF,CAAhC;AACA,MAAMQ,UAAU,GAAGd,aAAa,EAAhC;;AAFG,mBAGsBL,SAAS,CAAE,UAAEoB,MAAF,EAAc;AAAA,kBACzBA,MAAM,CAAE,mBAAF,CADmB;AAAA,QACzCC,WADyC,WACzCA,WADyC;;AAEjD,WAAO;AACNC,MAAAA,YAAY,EACX,CAACD,WAAW,GAAGC,YAAf,IAA+Bb;AAF1B,KAAP;AAIA,GANiC,EAM/B,EAN+B,CAH/B;AAAA,MAGKa,YAHL,cAGKA,YAHL,EAUH;AACA;AACA;;;AACApB,EAAAA,SAAS,CAAE,YAAM;AAAA;;AAChB,QAAMqB,QAAQ,GAAG,EAAjB;;AACA,QAAKR,MAAM,IAAI,oBAAED,KAAK,CAACU,OAAR,mDAAE,eAAeC,MAAjB,CAAf,EAAyC;AACxCF,MAAAA,QAAQ,CAACC,OAAT,GAAmB,CAAET,MAAF,CAAnB;AACA;;AACD,QAAK,CAAED,KAAK,CAACY,OAAR,IAAmBJ,YAAxB,EAAuC;AACtCC,MAAAA,QAAQ,CAACG,OAAT,GAAmBJ,YAAnB;AACA;;AACD,QAAKK,MAAM,CAACC,IAAP,CAAaL,QAAb,EAAwBE,MAA7B,EAAsC;AACrCI,MAAAA,WAAW,CAAEN,QAAF,CAAX;AACA;AACD,GAXQ,EAWN,CAAET,KAAK,CAACY,OAAR,EAAiBZ,KAAK,CAACU,OAAvB,EAAgCT,MAAhC,CAXM,CAAT,CAbG,CAyBH;AACA;;AACAb,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK,CAAEW,OAAP,EAAiB;AAChBI,MAAAA,aAAa,CAAE;AAAEJ,QAAAA,OAAO,EAAEK;AAAX,OAAF,CAAb;AACA;AACD,GAJQ,EAIN,CAAEL,OAAF,EAAWK,UAAX,CAJM,CAAT;;AAKA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAAEN,QAAF;AAAA,WACnBN,aAAa,CAAE;AAAEH,MAAAA,KAAK,kCAAOA,KAAP,GAAiBS,QAAjB;AAAP,KAAF,CADM;AAAA,GAApB;;AAEA,SACC,8BACC,cAAC,sBAAD;AAAwB,IAAA,KAAK,EAAGT,KAAhC;AAAwC,IAAA,QAAQ,EAAGe;AAAnD,IADD,EAEC,cAAC,aAAD,QACC,cAAC,YAAD;AAAc,IAAA,KAAK,EAAGf,KAAtB;AAA8B,IAAA,QAAQ,EAAGe;AAAzC,IADD,CAFD,EAKC,qBAAUV,UAAV,EACC,cAAC,aAAD,QACC,cAAC,WAAD;AACC,IAAA,QAAQ,EAAGT,QADZ;AAEC,IAAA,8BAA8B,EAAG;AAFlC,IADD,CADD,CALD,CADD;AAgBA;AAED,cAAc,kBAAd","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tInnerBlocks,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryProvider from './query-provider';\nimport QueryInspectorControls from './query-inspector-controls';\nimport { DEFAULTS_POSTS_PER_PAGE } from '../constants';\n\nconst TEMPLATE = [ [ 'core/query-loop' ] ];\nexport default function QueryEdit( {\n\tattributes: { queryId, query },\n\tcontext: { postId },\n\tsetAttributes,\n} ) {\n\tconst instanceId = useInstanceId( QueryEdit );\n\tconst blockProps = useBlockProps();\n\tconst { postsPerPage } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn {\n\t\t\tpostsPerPage:\n\t\t\t\t+getSettings().postsPerPage || DEFAULTS_POSTS_PER_PAGE,\n\t\t};\n\t}, [] );\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to overide previous wanted changes.\n\tuseEffect( () => {\n\t\tconst newQuery = {};\n\t\tif ( postId && ! query.exclude?.length ) {\n\t\t\tnewQuery.exclude = [ postId ];\n\t\t}\n\t\tif ( ! query.perPage && postsPerPage ) {\n\t\t\tnewQuery.perPage = postsPerPage;\n\t\t}\n\t\tif ( Object.keys( newQuery ).length ) {\n\t\t\tupdateQuery( newQuery );\n\t\t}\n\t}, [ query.perPage, query.exclude, postId ] );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls query={ query } setQuery={ updateQuery } />\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar query={ query } setQuery={ updateQuery } />\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<QueryProvider>\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\ttemplate={ TEMPLATE }\n\t\t\t\t\t\ttemplateInsertUpdatesSelection={ false }\n\t\t\t\t\t/>\n\t\t\t\t</QueryProvider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport * from './query-provider';\n"]}
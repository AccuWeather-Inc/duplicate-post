{"version":3,"sources":["@wordpress/block-library/src/buttons/edit.native.js"],"names":["debounce","View","__experimentalAlignmentHookSettingsProvider","AlignmentHookSettingsProvider","InnerBlocks","createBlock","useResizeObserver","useDispatch","useSelect","useState","useEffect","useRef","name","buttonBlockName","styles","ALLOWED_BLOCKS","BUTTONS_TEMPLATE","ButtonsEdit","align","attributes","clientId","isSelected","resizeObserver","sizes","maxWidth","setMaxWidth","spacing","marginLeft","select","getBlockCount","_getBlockOrder","getBlockOrder","getBlockParents","getSelectedBlockClientId","selectedBlockClientId","selectedBlockParents","isInnerButtonSelected","shouldDelete","insertBlock","removeBlock","selectBlock","margins","parent","marginRight","width","onAddNextButton","selectedId","order","selectedButtonIndex","findIndex","i","index","length","insertedBlock","renderFooterAppender","appenderContainer","alignmentHooksSetting","isEmbedButton","shouldRenderFooterAppender","current","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalAlignmentHookSettingsProvider as AlignmentHookSettingsProvider,\n\tInnerBlocks,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { useResizeObserver } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState, useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { name as buttonBlockName } from '../button/';\nimport styles from './editor.scss';\n\nconst ALLOWED_BLOCKS = [ buttonBlockName ];\nconst BUTTONS_TEMPLATE = [ [ 'core/button' ] ];\n\nexport default function ButtonsEdit( {\n\tattributes: { align },\n\tclientId,\n\tisSelected,\n} ) {\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ maxWidth, setMaxWidth ] = useState( 0 );\n\tconst { marginLeft: spacing } = styles.spacing;\n\n\tconst { getBlockOrder, isInnerButtonSelected, shouldDelete } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockCount,\n\t\t\t\tgetBlockOrder: _getBlockOrder,\n\t\t\t\tgetBlockParents,\n\t\t\t\tgetSelectedBlockClientId,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\tconst selectedBlockParents = getBlockParents(\n\t\t\t\tselectedBlockClientId,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tgetBlockOrder: _getBlockOrder,\n\t\t\t\tisInnerButtonSelected: selectedBlockParents[ 0 ] === clientId,\n\t\t\t\t// The purpose of `shouldDelete` check is giving the ability to\n\t\t\t\t// pass to mobile toolbar function called `onDelete` which removes\n\t\t\t\t// the whole `Buttons` container along with the last inner button\n\t\t\t\t// when there is exactly one button.\n\t\t\t\tshouldDelete: getBlockCount( clientId ) === 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst { insertBlock, removeBlock, selectBlock } = useDispatch(\n\t\t'core/block-editor'\n\t);\n\n\tuseEffect( () => {\n\t\tconst margins = 2 * styles.parent.marginRight;\n\t\tconst { width } = sizes || {};\n\t\tif ( width ) {\n\t\t\tsetMaxWidth( width - margins );\n\t\t}\n\t}, [ sizes ] );\n\n\tconst onAddNextButton = debounce( ( selectedId ) => {\n\t\tconst order = getBlockOrder( clientId );\n\t\tconst selectedButtonIndex = order.findIndex(\n\t\t\t( i ) => i === selectedId\n\t\t);\n\n\t\tconst index =\n\t\t\tselectedButtonIndex === -1 ? order.length + 1 : selectedButtonIndex;\n\n\t\tconst insertedBlock = createBlock( 'core/button' );\n\n\t\tinsertBlock( insertedBlock, index, clientId );\n\t\tselectBlock( insertedBlock.clientId );\n\t}, 200 );\n\n\tconst renderFooterAppender = useRef( () => (\n\t\t<View style={ styles.appenderContainer }>\n\t\t\t<InnerBlocks.ButtonBlockAppender\n\t\t\t\tisFloating={ true }\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t/>\n\t\t</View>\n\t) );\n\n\t// Inside buttons block alignment options are not supported.\n\tconst alignmentHooksSetting = {\n\t\tisEmbedButton: true,\n\t};\n\n\tconst shouldRenderFooterAppender = isSelected || isInnerButtonSelected;\n\n\treturn (\n\t\t<AlignmentHookSettingsProvider value={ alignmentHooksSetting }>\n\t\t\t{ resizeObserver }\n\t\t\t<InnerBlocks\n\t\t\t\tallowedBlocks={ ALLOWED_BLOCKS }\n\t\t\t\ttemplate={ BUTTONS_TEMPLATE }\n\t\t\t\trenderFooterAppender={\n\t\t\t\t\tshouldRenderFooterAppender && renderFooterAppender.current\n\t\t\t\t}\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\thorizontalAlignment={ align }\n\t\t\t\tonDeleteBlock={\n\t\t\t\t\tshouldDelete ? () => removeBlock( clientId ) : undefined\n\t\t\t\t}\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t\tparentWidth={ maxWidth }\n\t\t\t\tmarginHorizontal={ spacing }\n\t\t\t\tmarginVertical={ spacing }\n\t\t\t/>\n\t\t</AlignmentHookSettingsProvider>\n\t);\n}\n"]}
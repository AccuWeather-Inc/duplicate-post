{"version":3,"sources":["@wordpress/block-library/src/block/edit.js"],"names":["useSelect","useDispatch","useEntityBlockEditor","useCallback","Placeholder","Spinner","Disabled","ToolbarGroup","ToolbarButton","__","BlockEditorProvider","WritingFlow","BlockList","BlockControls","useBlockProps","ReusableBlockEditPanel","ReusableBlockEdit","ref","attributes","clientId","isSelected","recordArgs","select","reusableBlock","getEditedEntityRecord","hasResolved","hasFinishedResolution","isSaving","isSavingEntityRecord","canUserUpdate","canUser","isEditing","__experimentalIsEditingReusableBlock","settings","getSettings","editEntityRecord","saveEditedEntityRecord","__experimentalSetEditingReusableBlock","setIsEditing","value","convertBlockToStatic","__experimentalConvertBlockToStatic","createSuccessNotice","createErrorNotice","save","type","message","id","blocks","onInput","onChange","blockProps","element","title"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEntityBlockEditor } from '@wordpress/core-data';\nimport { useCallback } from '@wordpress/element';\nimport {\n\tPlaceholder,\n\tSpinner,\n\tDisabled,\n\tToolbarGroup,\n\tToolbarButton,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockEditorProvider,\n\tWritingFlow,\n\tBlockList,\n\tBlockControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport ReusableBlockEditPanel from './edit-panel';\n\nexport default function ReusableBlockEdit( {\n\tattributes: { ref },\n\tclientId,\n\tisSelected,\n} ) {\n\tconst recordArgs = [ 'postType', 'wp_block', ref ];\n\n\tconst {\n\t\treusableBlock,\n\t\thasResolved,\n\t\tisEditing,\n\t\tisSaving,\n\t\tcanUserUpdate,\n\t\tsettings,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\treusableBlock: select( 'core' ).getEditedEntityRecord(\n\t\t\t\t...recordArgs\n\t\t\t),\n\t\t\thasResolved: select( 'core' ).hasFinishedResolution(\n\t\t\t\t'getEditedEntityRecord',\n\t\t\t\trecordArgs\n\t\t\t),\n\t\t\tisSaving: select( 'core' ).isSavingEntityRecord( ...recordArgs ),\n\t\t\tcanUserUpdate: select( 'core' ).canUser( 'update', 'blocks', ref ),\n\t\t\tisEditing: select(\n\t\t\t\t'core/reusable-blocks'\n\t\t\t).__experimentalIsEditingReusableBlock( clientId ),\n\t\t\tsettings: select( 'core/block-editor' ).getSettings(),\n\t\t} ),\n\t\t[ ref, clientId ]\n\t);\n\n\tconst { editEntityRecord, saveEditedEntityRecord } = useDispatch( 'core' );\n\tconst { __experimentalSetEditingReusableBlock } = useDispatch(\n\t\t'core/reusable-blocks'\n\t);\n\tconst setIsEditing = useCallback(\n\t\t( value ) => {\n\t\t\t__experimentalSetEditingReusableBlock( clientId, value );\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst {\n\t\t__experimentalConvertBlockToStatic: convertBlockToStatic,\n\t} = useDispatch( 'core/reusable-blocks' );\n\n\tconst { createSuccessNotice, createErrorNotice } = useDispatch(\n\t\t'core/notices'\n\t);\n\tconst save = useCallback( async function () {\n\t\ttry {\n\t\t\tawait saveEditedEntityRecord( ...recordArgs );\n\t\t\tcreateSuccessNotice( __( 'Block updated.' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t}\n\t}, recordArgs );\n\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\t'wp_block',\n\t\t{ id: ref }\n\t);\n\n\tconst blockProps = useBlockProps();\n\n\tif ( ! hasResolved ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Placeholder>\n\t\t\t\t\t<Spinner />\n\t\t\t\t</Placeholder>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif ( ! reusableBlock ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Placeholder>\n\t\t\t\t\t{ __( 'Block has been deleted or is unavailable.' ) }\n\t\t\t\t</Placeholder>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tlet element = (\n\t\t<BlockEditorProvider\n\t\t\tvalue={ blocks }\n\t\t\tonInput={ onInput }\n\t\t\tonChange={ onChange }\n\t\t\tsettings={ settings }\n\t\t>\n\t\t\t<WritingFlow>\n\t\t\t\t<BlockList />\n\t\t\t</WritingFlow>\n\t\t</BlockEditorProvider>\n\t);\n\n\tif ( ! isEditing ) {\n\t\telement = <Disabled>{ element }</Disabled>;\n\t}\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ () => convertBlockToStatic( clientId ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Convert to regular blocks' ) }\n\t\t\t\t\t</ToolbarButton>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\n\t\t\t<div className=\"block-library-block__reusable-block-container\">\n\t\t\t\t{ ( isSelected || isEditing ) && (\n\t\t\t\t\t<ReusableBlockEditPanel\n\t\t\t\t\t\tisEditing={ isEditing }\n\t\t\t\t\t\ttitle={ reusableBlock.title }\n\t\t\t\t\t\tisSaving={ isSaving }\n\t\t\t\t\t\tisEditDisabled={ ! canUserUpdate }\n\t\t\t\t\t\tonEdit={ () => setIsEditing( true ) }\n\t\t\t\t\t\tonChangeTitle={ ( title ) =>\n\t\t\t\t\t\t\teditEntityRecord( ...recordArgs, { title } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonSave={ () => {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t\tsetIsEditing( false );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ element }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]}
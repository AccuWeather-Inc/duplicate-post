{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["TEMPLATE","QueryEdit","attributes","queryId","query","postId","context","setAttributes","instanceId","blockProps","select","getSettings","postsPerPage","DEFAULTS_POSTS_PER_PAGE","newQuery","exclude","length","perPage","Object","keys","updateQuery"],"mappings":";;;;;;;;;;;;AAKA;;;;AAFA;;AACA;;AAEA;;AASA;;AACA;;AA6DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA5DA;;AACA;;;;;;AAEA,IAAMA,QAAQ,GAAG,CAAE,CAAE,iBAAF,CAAF,CAAjB;;AACe,SAASC,SAAT,OAIX;AAAA,6BAHHC,UAGG;AAAA,MAHWC,OAGX,mBAHWA,OAGX;AAAA,MAHoBC,KAGpB,mBAHoBA,KAGpB;AAAA,MAFQC,MAER,QAFHC,OAEG,CAFQD,MAER;AAAA,MADHE,aACG,QADHA,aACG;AACH,MAAMC,UAAU,GAAG,4BAAeP,SAAf,CAAnB;AACA,MAAMQ,UAAU,GAAG,iCAAnB;;AAFG,mBAGsB,qBAAW,UAAEC,MAAF,EAAc;AAAA,kBACzBA,MAAM,CAAE,mBAAF,CADmB;AAAA,QACzCC,WADyC,WACzCA,WADyC;;AAEjD,WAAO;AACNC,MAAAA,YAAY,EACX,CAACD,WAAW,GAAGC,YAAf,IAA+BC;AAF1B,KAAP;AAIA,GANwB,EAMtB,EANsB,CAHtB;AAAA,MAGKD,YAHL,cAGKA,YAHL,EAUH;AACA;AACA;;;AACA,0BAAW,YAAM;AAAA;;AAChB,QAAME,QAAQ,GAAG,EAAjB;;AACA,QAAKT,MAAM,IAAI,oBAAED,KAAK,CAACW,OAAR,mDAAE,eAAeC,MAAjB,CAAf,EAAyC;AACxCF,MAAAA,QAAQ,CAACC,OAAT,GAAmB,CAAEV,MAAF,CAAnB;AACA;;AACD,QAAK,CAAED,KAAK,CAACa,OAAR,IAAmBL,YAAxB,EAAuC;AACtCE,MAAAA,QAAQ,CAACG,OAAT,GAAmBL,YAAnB;AACA;;AACD,QAAKM,MAAM,CAACC,IAAP,CAAaL,QAAb,EAAwBE,MAA7B,EAAsC;AACrCI,MAAAA,WAAW,CAAEN,QAAF,CAAX;AACA;AACD,GAXD,EAWG,CAAEV,KAAK,CAACa,OAAR,EAAiBb,KAAK,CAACW,OAAvB,EAAgCV,MAAhC,CAXH,EAbG,CAyBH;AACA;;AACA,0BAAW,YAAM;AAChB,QAAK,CAAEF,OAAP,EAAiB;AAChBI,MAAAA,aAAa,CAAE;AAAEJ,QAAAA,OAAO,EAAEK;AAAX,OAAF,CAAb;AACA;AACD,GAJD,EAIG,CAAEL,OAAF,EAAWK,UAAX,CAJH;;AAKA,MAAMY,WAAW,GAAG,SAAdA,WAAc,CAAEN,QAAF;AAAA,WACnBP,aAAa,CAAE;AAAEH,MAAAA,KAAK,kCAAOA,KAAP,GAAiBU,QAAjB;AAAP,KAAF,CADM;AAAA,GAApB;;AAEA,SACC,qDACC,4BAAC,+BAAD;AAAwB,IAAA,KAAK,EAAGV,KAAhC;AAAwC,IAAA,QAAQ,EAAGgB;AAAnD,IADD,EAEC,4BAAC,0BAAD,QACC,4BAAC,qBAAD;AAAc,IAAA,KAAK,EAAGhB,KAAtB;AAA8B,IAAA,QAAQ,EAAGgB;AAAzC,IADD,CAFD,EAKC,mCAAUX,UAAV,EACC,4BAAC,sBAAD,QACC,4BAAC,wBAAD;AACC,IAAA,QAAQ,EAAGT,QADZ;AAEC,IAAA,8BAA8B,EAAG;AAFlC,IADD,CADD,CALD,CADD;AAgBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tInnerBlocks,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryProvider from './query-provider';\nimport QueryInspectorControls from './query-inspector-controls';\nimport { DEFAULTS_POSTS_PER_PAGE } from '../constants';\n\nconst TEMPLATE = [ [ 'core/query-loop' ] ];\nexport default function QueryEdit( {\n\tattributes: { queryId, query },\n\tcontext: { postId },\n\tsetAttributes,\n} ) {\n\tconst instanceId = useInstanceId( QueryEdit );\n\tconst blockProps = useBlockProps();\n\tconst { postsPerPage } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn {\n\t\t\tpostsPerPage:\n\t\t\t\t+getSettings().postsPerPage || DEFAULTS_POSTS_PER_PAGE,\n\t\t};\n\t}, [] );\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to overide previous wanted changes.\n\tuseEffect( () => {\n\t\tconst newQuery = {};\n\t\tif ( postId && ! query.exclude?.length ) {\n\t\t\tnewQuery.exclude = [ postId ];\n\t\t}\n\t\tif ( ! query.perPage && postsPerPage ) {\n\t\t\tnewQuery.perPage = postsPerPage;\n\t\t}\n\t\tif ( Object.keys( newQuery ).length ) {\n\t\t\tupdateQuery( newQuery );\n\t\t}\n\t}, [ query.perPage, query.exclude, postId ] );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls query={ query } setQuery={ updateQuery } />\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar query={ query } setQuery={ updateQuery } />\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<QueryProvider>\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\ttemplate={ TEMPLATE }\n\t\t\t\t\t\ttemplateInsertUpdatesSelection={ false }\n\t\t\t\t\t/>\n\t\t\t\t</QueryProvider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport * from './query-provider';\n"]}
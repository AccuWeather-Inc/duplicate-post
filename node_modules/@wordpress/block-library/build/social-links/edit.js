"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SocialLinksEdit = SocialLinksEdit;
exports.default = void 0;

var _element = require("@wordpress/element");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

/**
 * WordPress dependencies
 */
var ALLOWED_BLOCKS = ['core/social-link'];

function SocialLinksEdit(props) {
  var openInNewTab = props.attributes.openInNewTab,
      setAttributes = props.setAttributes;
  var SocialPlaceholder = (0, _element.createElement)("div", {
    className: "wp-block-social-links__social-placeholder"
  }, (0, _element.createElement)("div", {
    className: "wp-block-social-link wp-social-link-facebook"
  }), (0, _element.createElement)("div", {
    className: "wp-block-social-link wp-social-link-twitter"
  }), (0, _element.createElement)("div", {
    className: "wp-block-social-link wp-social-link-instagram"
  }));
  var blockProps = (0, _blockEditor.useBlockProps)();
  var innerBlocksProps = (0, _blockEditor.__experimentalUseInnerBlocksProps)(blockProps, {
    allowedBlocks: ALLOWED_BLOCKS,
    orientation: 'horizontal',
    placeholder: SocialPlaceholder,
    templateLock: false,
    __experimentalAppenderTagName: 'li'
  });
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_blockEditor.InspectorControls, null, (0, _element.createElement)(_components.PanelBody, {
    title: (0, _i18n.__)('Link settings')
  }, (0, _element.createElement)(_components.ToggleControl, {
    label: (0, _i18n.__)('Open links in new tab'),
    checked: openInNewTab,
    onChange: function onChange() {
      return setAttributes({
        openInNewTab: !openInNewTab
      });
    }
  }))), (0, _element.createElement)("ul", innerBlocksProps));
}

var _default = SocialLinksEdit;
exports.default = _default;
//# sourceMappingURL=edit.js.map
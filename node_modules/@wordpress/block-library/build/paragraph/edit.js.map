{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.js"],"names":["getComputedStyle","node","pseudo","ownerDocument","defaultView","name","ParagraphRTLToolbar","direction","setDirection","isRTL","select","getSettings","icon","formatLtr","title","isActive","onClick","undefined","useDropCapMinHeight","ref","isDisabled","dependencies","minHeight","setMinHeight","current","lineHeight","ParagraphBlock","attributes","mergeBlocks","onReplace","onRemove","setAttributes","align","content","dropCap","placeholder","fontSize","style","isDropCapFeatureEnabled","inlineFontSize","size","fontSizes","hasDropCap","blockProps","className","newAlign","newDirection","newContent","value"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { PanelBody, ToggleControl, ToolbarGroup } from '@wordpress/components';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\tuseBlockProps,\n\tgetFontSize,\n\t__experimentalUseEditorFeature as useEditorFeature,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { formatLtr } from '@wordpress/icons';\n\nfunction getComputedStyle( node, pseudo ) {\n\treturn node.ownerDocument.defaultView.getComputedStyle( node, pseudo );\n}\n\nconst name = 'core/paragraph';\n\nfunction ParagraphRTLToolbar( { direction, setDirection } ) {\n\tconst isRTL = useSelect( ( select ) => {\n\t\treturn !! select( 'core/block-editor' ).getSettings().isRTL;\n\t}, [] );\n\n\treturn (\n\t\tisRTL && (\n\t\t\t<ToolbarGroup\n\t\t\t\tcontrols={ [\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: formatLtr,\n\t\t\t\t\t\ttitle: _x( 'Left to right', 'editor button' ),\n\t\t\t\t\t\tisActive: direction === 'ltr',\n\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\tsetDirection(\n\t\t\t\t\t\t\t\tdirection === 'ltr' ? undefined : 'ltr'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t)\n\t);\n}\n\nfunction useDropCapMinHeight( ref, isDisabled, dependencies ) {\n\tconst [ minHeight, setMinHeight ] = useState();\n\n\tuseEffect( () => {\n\t\tif ( isDisabled ) {\n\t\t\tsetMinHeight();\n\t\t\treturn;\n\t\t}\n\n\t\tsetMinHeight(\n\t\t\tgetComputedStyle( ref.current, 'first-letter' ).lineHeight\n\t\t);\n\t}, [ isDisabled, ...dependencies ] );\n\n\treturn minHeight;\n}\n\nfunction ParagraphBlock( {\n\tattributes,\n\tmergeBlocks,\n\tonReplace,\n\tonRemove,\n\tsetAttributes,\n} ) {\n\tconst {\n\t\talign,\n\t\tcontent,\n\t\tdirection,\n\t\tdropCap,\n\t\tplaceholder,\n\t\tfontSize,\n\t\tstyle,\n\t} = attributes;\n\tconst isDropCapFeatureEnabled = useEditorFeature( 'typography.dropCap' );\n\tconst ref = useRef();\n\tconst inlineFontSize = style?.fontSize;\n\tconst size = useSelect(\n\t\t( select ) => {\n\t\t\tconst { fontSizes } = select( 'core/block-editor' ).getSettings();\n\t\t\treturn getFontSize( fontSizes, fontSize, inlineFontSize ).size;\n\t\t},\n\t\t[ fontSize, inlineFontSize ]\n\t);\n\tconst hasDropCap = isDropCapFeatureEnabled && dropCap;\n\tconst minHeight = useDropCapMinHeight( ref, ! hasDropCap, [ size ] );\n\tconst blockProps = useBlockProps( {\n\t\tref,\n\t\tclassName: classnames( {\n\t\t\t'has-drop-cap': dropCap,\n\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t} ),\n\t\tstyle: { direction, minHeight },\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\tsetAttributes( { align: newAlign } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ParagraphRTLToolbar\n\t\t\t\t\tdirection={ direction }\n\t\t\t\t\tsetDirection={ ( newDirection ) =>\n\t\t\t\t\t\tsetAttributes( { direction: newDirection } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t{ isDropCapFeatureEnabled && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Text settings' ) }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Drop cap' ) }\n\t\t\t\t\t\t\tchecked={ !! dropCap }\n\t\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\t\tsetAttributes( { dropCap: ! dropCap } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\tdropCap\n\t\t\t\t\t\t\t\t\t? __( 'Showing large initial letter.' )\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to show a large initial letter.'\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName=\"p\"\n\t\t\t\t{ ...blockProps }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ ( newContent ) =>\n\t\t\t\t\tsetAttributes( { content: newContent } )\n\t\t\t\t}\n\t\t\t\tonSplit={ ( value ) => {\n\t\t\t\t\tif ( ! value ) {\n\t\t\t\t\t\treturn createBlock( name );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn createBlock( name, {\n\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ onRemove }\n\t\t\t\taria-label={\n\t\t\t\t\tcontent\n\t\t\t\t\t\t? __( 'Paragraph block' )\n\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t'Empty block; start writing or type forward slash to choose a block'\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\tplaceholder={\n\t\t\t\t\tplaceholder ||\n\t\t\t\t\t__( 'Start writing or type / to choose a block' )\n\t\t\t\t}\n\t\t\t\t__unstableEmbedURLOnPaste\n\t\t\t\t__unstableAllowPrefixTransformations\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ParagraphBlock;\n"]}
{"version":3,"sources":["@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/reusable-block-delete-button.js"],"names":["ReusableBlockDeleteButton","clientId","select","getBlock","canUser","blockObj","reusableBlock","getEntityRecord","attributes","ref","block","isVisible","isTemporary","id","isDisabled","STORE_KEY","deleteReusableBlock","__experimentalDeleteReusableBlock","createSuccessNotice","createErrorNotice","onDelete","type","message","onClose","hasConfirmed","window","confirm"],"mappings":";;;;;;;;;AAOA;;;;;;AAJA;;AACA;;AACA;;AACA;;AAEA;;AAKA;;AAbA;;;;AAUA;;;AAKA,SAASA,yBAAT,OAAmD;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAAA,mBACT,qBACxC,UAAEC,MAAF,EAAc;AAAA,kBACQA,MAAM,CAAE,mBAAF,CADd;AAAA,QACLC,QADK,WACLA,QADK;;AAAA,mBAEOD,MAAM,CAAE,MAAF,CAFb;AAAA,QAELE,OAFK,YAELA,OAFK;;AAGb,QAAMC,QAAQ,GAAGF,QAAQ,CAAEF,QAAF,CAAzB;AAEA,QAAMK,aAAa,GAClBD,QAAQ,IAAI,6BAAiBA,QAAjB,CAAZ,GACGH,MAAM,CAAE,MAAF,CAAN,CAAiBK,eAAjB,CACA,UADA,EAEA,UAFA,EAGAF,QAAQ,CAACG,UAAT,CAAoBC,GAHpB,CADH,GAMG,IAPJ;AASA,WAAO;AACNC,MAAAA,KAAK,EAAEL,QADD;AAENM,MAAAA,SAAS,EACR,CAAC,CAAEL,aAAH,KACEA,aAAa,CAACM,WAAd,IACD,CAAC,CAAER,OAAO,CAAE,QAAF,EAAY,QAAZ,EAAsBE,aAAa,CAACO,EAApC,CAFX,CAHK;AAMNC,MAAAA,UAAU,EAAER,aAAa,IAAIA,aAAa,CAACM;AANrC,KAAP;AAQA,GAvBuC,EAwBxC,CAAEX,QAAF,CAxBwC,CADS;AAAA,MAC1CU,SAD0C,cAC1CA,SAD0C;AAAA,MAC/BG,UAD+B,cAC/BA,UAD+B;AAAA,MACnBJ,KADmB,cACnBA,KADmB;;AAAA,qBA8B9C,uBAAaK,oBAAb,CA9B8C;AAAA,MA6BdC,mBA7Bc,gBA6BjDC,iCA7BiD;;AAAA,sBAgCC,uBAClD,cADkD,CAhCD;AAAA,MAgC1CC,mBAhC0C,iBAgC1CA,mBAhC0C;AAAA,MAgCrBC,iBAhCqB,iBAgCrBA,iBAhCqB;;AAmClD,MAAMC,QAAQ,GAAG,gHAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEQJ,mBAAmB,CAAEN,KAAK,CAACF,UAAN,CAAiBC,GAAnB,CAF3B;;AAAA;AAGES,YAAAA,mBAAmB,CAAE,cAAI,gBAAJ,CAAF,EAA0B;AAC5CG,cAAAA,IAAI,EAAE;AADsC,aAA1B,CAAnB;AAHF;AAAA;;AAAA;AAAA;AAAA;AAOEF,YAAAA,iBAAiB,CAAE,YAAMG,OAAR,EAAiB;AACjCD,cAAAA,IAAI,EAAE;AAD2B,aAAjB,CAAjB;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADgB,IAahB,CAAEX,KAAF,CAbgB,CAAjB;;AAgBA,MAAK,CAAEC,SAAP,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,SACC,4BAAC,sCAAD,QACG;AAAA,QAAIY,OAAJ,SAAIA,OAAJ;AAAA,WACD,4BAAC,oBAAD;AACC,MAAA,QAAQ,EAAGT,UADZ;AAEC,MAAA,OAAO,EAAG,mBAAM;AACf;AACA,YAAMU,YAAY,GAAGC,MAAM,CAACC,OAAP,EACpB;AACA,sBACC,6DACC,sEAFF,CAFoB,CAArB;;AAOA,YAAKF,YAAL,EAAoB;AACnBJ,UAAAA,QAAQ;AACRG,UAAAA,OAAO;AACP;AACD;AAfF,OAiBG,cAAI,6BAAJ,CAjBH,CADC;AAAA,GADH,CADD;AAyBA;;eAEcvB,yB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCallback } from '@wordpress/element';\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { STORE_KEY } from '../../store/constants';\n\nfunction ReusableBlockDeleteButton( { clientId } ) {\n\tconst { isVisible, isDisabled, block } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlock } = select( 'core/block-editor' );\n\t\t\tconst { canUser } = select( 'core' );\n\t\t\tconst blockObj = getBlock( clientId );\n\n\t\t\tconst reusableBlock =\n\t\t\t\tblockObj && isReusableBlock( blockObj )\n\t\t\t\t\t? select( 'core' ).getEntityRecord(\n\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\t'wp_block',\n\t\t\t\t\t\t\tblockObj.attributes.ref\n\t\t\t\t\t  )\n\t\t\t\t\t: null;\n\n\t\t\treturn {\n\t\t\t\tblock: blockObj,\n\t\t\t\tisVisible:\n\t\t\t\t\t!! reusableBlock &&\n\t\t\t\t\t( reusableBlock.isTemporary ||\n\t\t\t\t\t\t!! canUser( 'delete', 'blocks', reusableBlock.id ) ),\n\t\t\t\tisDisabled: reusableBlock && reusableBlock.isTemporary,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst {\n\t\t__experimentalDeleteReusableBlock: deleteReusableBlock,\n\t} = useDispatch( STORE_KEY );\n\n\tconst { createSuccessNotice, createErrorNotice } = useDispatch(\n\t\t'core/notices'\n\t);\n\tconst onDelete = useCallback(\n\t\tasync function () {\n\t\t\ttry {\n\t\t\t\tawait deleteReusableBlock( block.attributes.ref );\n\t\t\t\tcreateSuccessNotice( __( 'Block deleted.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t} catch ( error ) {\n\t\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[ block ]\n\t);\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<MenuItem\n\t\t\t\t\tdisabled={ isDisabled }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t// eslint-disable-next-line no-alert\n\t\t\t\t\t\tconst hasConfirmed = window.confirm(\n\t\t\t\t\t\t\t// eslint-disable-next-line @wordpress/i18n-no-collapsible-whitespace\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t'Are you sure you want to delete this Reusable Block?\\n\\n' +\n\t\t\t\t\t\t\t\t\t'It will be permanently removed from all posts and pages that use it.'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( hasConfirmed ) {\n\t\t\t\t\t\t\tonDelete();\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Remove from Reusable blocks' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n\nexport default ReusableBlockDeleteButton;\n"]}